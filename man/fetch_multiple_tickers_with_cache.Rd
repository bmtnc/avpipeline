% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_multiple_tickers_with_cache.R
\name{fetch_multiple_tickers_with_cache}
\alias{fetch_multiple_tickers_with_cache}
\title{Generic Multiple Fetch with Batch Caching}
\usage{
fetch_multiple_tickers_with_cache(
  tickers,
  cache_file,
  single_fetch_func,
  cache_reader_func,
  data_type_name = "data",
  delay_seconds = 1,
  max_retries = 3,
  as_of_date = Sys.Date(),
  ...
)
}
\arguments{
\item{tickers}{Character vector of ticker symbols to fetch}

\item{cache_file}{Path to cache file (CSV format)}

\item{single_fetch_func}{Function to fetch data for a single ticker}

\item{cache_reader_func}{Function to read cached data}

\item{data_type_name}{Character string for logging (e.g., "price", "income statement")}

\item{delay_seconds}{Numeric. Delay between API calls in seconds}

\item{max_retries}{Numeric. Maximum number of retry attempts per ticker (default 3)}

\item{as_of_date}{Date, timestamp for when data was pulled (defaults to current date)}

\item{...}{Additional parameters passed to single_fetch_func}
}
\value{
Invisible NULL (data is written to cache file)
}
\description{
Generic function that handles the batch caching pattern used across different
data types (price, income statement, etc.). This function processes each ticker
individually, collects all successful results in memory, and writes all data
to cache at once at the end.
}
\examples{
\dontrun{
# For price data
fetch_multiple_tickers_with_cache(
  tickers = c("AAPL", "GOOGL"),
  cache_file = "cache/price_data.csv",
  single_fetch_func = fetch_daily_adjusted_prices,
  cache_reader_func = read_cached_price_data,
  data_type_name = "price",
  delay_seconds = 1,
  max_retries = 3,
  outputsize = "full",
  datatype = "json"
)

# For income statement data
fetch_multiple_tickers_with_cache(
  tickers = c("AAPL", "GOOGL"),
  cache_file = "cache/income_statement_data.csv",
  single_fetch_func = fetch_income_statement,
  cache_reader_func = read_cached_income_statement_data,
  data_type_name = "income statement",
  delay_seconds = 12,
  max_retries = 3
)
}

}
