% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_multiple_with_cache_generic.R
\name{fetch_multiple_with_cache_generic}
\alias{fetch_multiple_with_cache_generic}
\title{Generic Multiple Fetch with Caching}
\usage{
fetch_multiple_with_cache_generic(
  tickers,
  cache_file,
  cache_reader_func,
  incremental_cache_func,
  data_type_name = "data",
  ...
)
}
\arguments{
\item{tickers}{Character vector of ticker symbols to fetch}

\item{cache_file}{Path to cache file (CSV format)}

\item{cache_reader_func}{Function to read cached data (e.g., read_cached_price_data)}

\item{incremental_cache_func}{Function to perform incremental caching (e.g., fetch_multiple_tickers_with_incremental_cache)}

\item{data_type_name}{Character string for logging (e.g., "price", "income statement")}

\item{...}{Additional parameters passed to incremental_cache_func}
}
\value{
A tibble with data for all requested tickers
}
\description{
Generic function that handles the caching orchestration pattern used across different
data types (price, income statement, etc.). This function provides intelligent caching
to avoid redundant API calls by checking cache files and only fetching missing data.
}
\examples{
\dontrun{
# For price data
price_data <- fetch_multiple_with_cache_generic(
  tickers = c("AAPL", "GOOGL"),
  cache_file = "cache/price_data.csv",
  cache_reader_func = read_cached_price_data,
  incremental_cache_func = fetch_multiple_tickers_with_incremental_cache,
  data_type_name = "price",
  outputsize = "full",
  datatype = "json"
)

# For income statement data
income_data <- fetch_multiple_with_cache_generic(
  tickers = c("AAPL", "GOOGL"),
  cache_file = "cache/income_statement_data.csv",
  cache_reader_func = read_cached_income_statement_data,
  incremental_cache_func = fetch_multiple_income_statements_with_incremental_cache,
  data_type_name = "income statement"
)
}

}
